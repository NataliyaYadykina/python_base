from random import randint
from telegram import Bot, Update
from telegram.ext import Updater, CommandHandler, ConversationHandler, MessageHandler, Filters, CallbackContext

token1 = '6161250705:AAGuSIvSddYd0MJ9Dp-A2yNPJo1YgPE_iOE'

# –∏–¥ —á–∞—Ç–∞; –∏–º—è –∏–≥—Ä–æ–∫–∞; –≤—Å–µ–≥–æ –∫–æ–Ω—Ñ–µ—Ç; —É—Ä–æ–≤–µ–Ω—å; —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã; —á–µ–π —Ö–æ–¥; –∫–æ–Ω—Ñ–µ—Ç —É –∏–≥—Ä–æ–∫–∞; –∫–æ–Ω—Ñ–µ—Ç —É –±–æ—Ç–∞; —á–∏—Å–ª–æ –∏–≥—Ä; —á–∏—Å–ª–æ –≤—ã–∏–≥—Ä—ã—à–µ–π; —Å—É–º–º–∞ –±–∞–ª–ª–æ–≤;
#       0;          1;            2;       3;           4;       5;               6;             7;         8;               9;           10;

bot = Bot(token=token1)
updater = Updater(token=token1)
dispatcher = updater.dispatcher # brain

count_candies = 150
max_take_candies = 28
file_path = 'hw9_statistic.csv'
A = 0
B = 1

# –°—Ç–∞—Ä—Ç—É–µ–º –∏–≥—Ä—É —Å –∫–æ–Ω—Ñ–µ—Ç–∞–º–∏
def start(update:Update, context:CallbackContext):
    context.bot.send_message(update.effective_chat.id, f'''–ü—Ä–∏–≤–µ—Ç, —Å–ª–∞–¥–∫–æ–µ–∂–∫–∞! üç≠üç≠üç≠
–Ø –±–æ—Ç ü§ñ –¥–ª—è –∏–≥—Ä—ã —Å –∫–æ–Ω—Ñ–µ—Ç–∞–º–∏.
–û—Ç–ª–∏—á–Ω–æ, {update.effective_user.first_name}! üî•üî•üî•
–Ø –æ—á–µ–Ω—å —Ä–∞–¥, —á—Ç–æ —Ç—ã —Å—ã–≥—Ä–∞–µ—à—å —Å–æ –º–Ω–æ–π! üòé

–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã –∏–ª–∏ –ø–æ—á–∏—Ç–∞–π –ø—Ä–∞–≤–∏–ª–∞ (/rules):

1. ‚≠êÔ∏è –ü—Ä–æ—Å—Ç–æ–π 
2. ‚≠êÔ∏è‚≠êÔ∏è –°—Ä–µ–¥–Ω–∏–π
3. ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è –°–ª–æ–∂–Ω—ã–π

–û—Ç–ø—Ä–∞–≤—å –≤ —á–∞—Ç –Ω–æ–º–µ—Ä —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã.''')

# –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã
def rules(update:Update, context:CallbackContext):
    context.bot.send_message(update.effective_chat.id, f'''–ü–†–ê–í–ò–õ–ê –ò–ì–†–´:
–ù–∞ —Å—Ç–æ–ª–µ –ª–µ–∂–∏—Ç {count_candies} –∫–æ–Ω—Ñ–µ—Ç. \
–ò–≥—Ä–∞—é—Ç –¥–≤–∞ –∏–≥—Ä–æ–∫–∞, –¥–µ–ª–∞—è —Ö–æ–¥ –¥—Ä—É–≥ –ø–æ—Å–ª–µ –¥—Ä—É–≥–∞. \
–ñ–µ—Ä–µ–±—å–µ–≤–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫—Ç–æ –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É. \
–ó–∞ –æ–¥–∏–Ω —Ö–æ–¥ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –æ—Ç 1 –¥–æ {max_take_candies} –∫–æ–Ω—Ñ–µ—Ç. \
–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - —Ç–æ—Ç, –∫—Ç–æ –æ—Å—Ç–∞–≤–∏–ª –Ω–∞ —Å—Ç–æ–ª–µ 0 –∫–æ–Ω—Ñ–µ—Ç. \
–í –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–∑–∞ –æ–Ω –∑–∞–±–∏—Ä–∞–µ—Ç –≤—Å–µ {count_candies} –∫–æ–Ω—Ñ–µ—Ç.''')

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞, —Å—Ç–∞—Ä—Ç—É–µ–º –∏–≥—Ä—É
def level(update:Update, context:CallbackContext):
    level = update.message.text
    state = A
    if level.isdigit():
        level = int(level)
        if level == 1:
            context.bot.send_message(update.effective_chat.id, f'''–¢—ã –≤—ã–±—Ä–∞–ª —É—Ä–æ–≤–µ–Ω—å {level}. ‚≠êÔ∏è
–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä, —á—Ç–æ–±—ã –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è! üôÇ
–Ø —Å–¥–µ–ª–∞—é –≤–∏–¥, —á—Ç–æ –ø–ª–æ—Ö–æ —É–º–µ—é –∏–≥—Ä–∞—Ç—å –≤ —ç—Ç—É –∏–≥—Ä—É. ü§∑‚Äç‚ôÇÔ∏è''')
        elif level == 2:
            context.bot.send_message(update.effective_chat.id, f'''–¢—ã –≤—ã–±—Ä–∞–ª —É—Ä–æ–≤–µ–Ω—å {level}. ‚≠êÔ∏è‚≠êÔ∏è
–°—É–ø–µ—Ä! üëç –ù–∞ —ç—Ç–æ–º —É—Ä–æ–≤–Ω–µ —è –±—É–¥—É —Ç–µ–±–µ –ø–æ–¥–¥–∞–≤–∞—Ç—å—Å—è. üòâ \
–ù–æ —Ç—ã –Ω–µ —Ä–∞—Å—Å–ª–∞–±–ª—è–π—Å—è! –ò–Ω–æ–≥–¥–∞ —è –±—É–¥—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Å–≤–æ–∏ —Ö–æ–¥—ã üôÉ''')
        elif level == 3:
            context.bot.send_message(update.effective_chat.id, f'''–¢—ã –≤—ã–±—Ä–∞–ª —É—Ä–æ–≤–µ–Ω—å {level}. ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è
WOW!!! üî•üî•üî• –°–∏–ª—å–Ω–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ! \
–ò–º–µ–π –≤ –≤–∏–¥—É, –∑–¥–µ—Å—å —è –Ω–µ –∏–≥—Ä–∞—é –Ω–∏ –≤ –∫–∞–∫–∏–µ –ø–æ–¥–¥–∞–≤–∫–∏. ü¶æ \
–¢–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ—è–≤–∏—Ç—å —Å–º–µ–∫–∞–ª–∫—É –∏ –±—ã—Ç—å —É–¥–∞—á–ª–∏–≤—ã–º, —á—Ç–æ–±—ã –ø–æ–±–µ–¥–∏—Ç—å –º–µ–Ω—è üòú''')
        else:
            context.bot.send_message(update.effective_chat.id, '‚ùå –û—à–∏–±–∫–∞! –ù–µ—Ç —Ç–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è.')
            state = B
    else:
        context.bot.send_message(update.effective_chat.id, '‚ùå –û—à–∏–±–∫–∞! –í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.')
        state = B
    if level == 1 or level == 2 or level == 3:
        data_player = []
        file_statistic = get_data(file_path)
        player_info = str(update.effective_chat.id)
        check_stat_player = check_data_player(player_info, file_statistic)
        active_player = random_start_player()
        if active_player == 1:
            context.bot.send_message(update.effective_chat.id, f'–ñ–µ—Ä–µ–±—å–µ–≤–∫–∞: –ø–µ—Ä–≤—ã–π —Ö–æ–¥ - —Ç–≤–æ–π. üòé\n–ë–µ—Ä–∏ –∫–æ–Ω—Ñ–µ—Ç—ã! –¢—ã –º–æ–∂–µ—à—å –≤–∑—è—Ç—å –Ω–µ –±–æ–ª–µ–µ —á–µ–º {max_take_candies} –∫–æ–Ω—Ñ–µ—Ç(—ã). –û—Ç–ø—Ä–∞–≤—å –≤ —á–∞—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç.')
        if check_stat_player:
            data_player = get_data_player(player_info, file_statistic)
            data_player[3] = level
            data_player[5] = active_player
        else:
            data_player = [update.effective_chat.id, update.effective_user.first_name, count_candies, level, 1, active_player, 0, 0, 0, 0, 0]
        if active_player == 0:
            take_candies = bot_plays(level, data_player)
            data_player[2] = count_candies - take_candies
            data_player[5] = 1
            data_player[7] = int(data_player[7]) + take_candies
            context.bot.send_message(update.effective_chat.id, '–ñ–µ—Ä–µ–±—å–µ–≤–∫–∞: –ø–µ—Ä–≤—ã–π —Ö–æ–¥ - –º–æ–π. ü§ñ\n–ü–æ–µ—Ö–∞–ª–∏!!!')
            context.bot.send_message(update.effective_chat.id, f'''ü§ñ –Ø –∑–∞–±—Ä–∞–ª {take_candies} –∫–æ–Ω—Ñ–µ—Ç.
–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {data_player[2]} –∫–æ–Ω—Ñ–µ—Ç(—ã).
–¢–≤–æ–π —Ö–æ–¥! –¢—ã –º–æ–∂–µ—à—å –≤–∑—è—Ç—å –Ω–µ –±–æ–ª–µ–µ —á–µ–º {max_take_candies} –∫–æ–Ω—Ñ–µ—Ç(—ã). –û—Ç–ø—Ä–∞–≤—å –≤ —á–∞—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç.''')
        update_data(check_stat_player, player_info, data_player, file_path)
    return state

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
def get_data(file_path):
    with open(file_path, 'r', encoding = 'utf-8') as f:
        text_file = f.read()
    return text_file

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ –≤ —Ñ–∞–π–ª–µ
def check_data_player(player_info, text_file):
    check = 0
    if player_info in text_file:
        check = 1
    return check

# –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ (–µ—Å–ª–∏ –∏–≥—Ä–æ–∫–∞ –µ—â–µ –Ω–µ—Ç –∏–ª–∏ –µ—Å–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–∂–µ –µ—Å—Ç—å –∏ –Ω–∞–¥–æ –æ–±–Ω–æ–≤–∏—Ç—å)
def update_data(check, player_info, data, file_path):
    string_player = ''
    old_str = ''
    for i in data:
        string_player += str(i) + ';'
    string_player += '\n'
    if not check:
        with open (file_path, 'a', encoding = 'utf-8') as f:
            f.write(string_player)
    else:
        old_text_file = get_data(file_path)
        with open (file_path, 'r', encoding = 'utf-8') as f:
            for line in f:
                if player_info in line:
                    old_str = line
                    break
        new_text_file = old_text_file.replace(old_str, string_player)
        with open (file_path, 'w', encoding = 'utf-8') as f:
            f.write(new_text_file)

# –ó–∞–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º–∏
def get_data_player(player_info, text_file):
    data_player = []
    text_file = text_file.split(';\n')
    text_file = text_file[:-1]
    for i in text_file:
        if player_info in i:
            i = i.split(';')
            for j in i:
                data_player.append(j)
    return data_player

# –ñ–µ—Ä–µ–±—å–µ–≤–∫–∞ - –∫—Ç–æ –Ω–∞—á–∏–Ω–∞–µ—Ç.
def random_start_player():
    active_player = randint(0, 1)
    return active_player # 0 - –±–æ—Ç, 1 - –∏–≥—Ä–æ–∫

# –•–æ–¥ –±–æ—Ç–∞
def bot_plays(level, data_player):
    # –±–æ—Ç —Ç—É–ø–æ–π
    if int(level) == 1:
        if int(data_player[2]) <= max_take_candies:
            take_candies = int(data_player[2])
        else:
            take_candies = randint(1, max_take_candies)
    # –±–æ—Ç –∏–Ω–æ–≥–¥–∞ —É–º–Ω—ã–π, –∏–Ω–æ–≥–¥–∞ —Ç—É–ø–æ–π
    elif int(level) == 2:
        if int(data_player[2]) <= max_take_candies:
            take_candies = int(data_player[2])
        else:
            bot_is_smart = randint(0, 1)
            if bot_is_smart == 0:
                take_candies = randint(1, max_take_candies)
            else:
                if int(data_player[2]) % (1 + max_take_candies) != 0:
                    take_candies = int(data_player[2]) % (1 + max_take_candies)
                else:
                    take_candies = randint(1, max_take_candies)
    # –±–æ—Ç —É–º–Ω—ã–π
    else:
        if int(data_player[2]) <= max_take_candies:
            take_candies = int(data_player[2])
        else:
            if int(data_player[2]) % (1 + max_take_candies) != 0:
                take_candies = int(data_player[2]) % (1 + max_take_candies)
            else:
                take_candies = randint(1, max_take_candies)
    return take_candies
        

# Game
# –∏–¥ —á–∞—Ç–∞; –∏–º—è –∏–≥—Ä–æ–∫–∞; –≤—Å–µ–≥–æ –∫–æ–Ω—Ñ–µ—Ç; —É—Ä–æ–≤–µ–Ω—å; —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã; —á–µ–π —Ö–æ–¥; –∫–æ–Ω—Ñ–µ—Ç —É –∏–≥—Ä–æ–∫–∞; –∫–æ–Ω—Ñ–µ—Ç —É –±–æ—Ç–∞; —á–∏—Å–ª–æ –∏–≥—Ä; —á–∏—Å–ª–æ –≤—ã–∏–≥—Ä—ã—à–µ–π; —Å—É–º–º–∞ –±–∞–ª–ª–æ–≤;
#       0;          1;            2;       3;           4;       5;               6;             7;         8;               9;           10;
def game(update:Update, context:CallbackContext):
    state = A
    win = 0
    error = 0
    max_take_candies1 = max_take_candies
    file_statistic = get_data('hw9_statistic.csv')
    player_info = str(update.effective_chat.id)
    check_stat_player = check_data_player(player_info, file_statistic)
    data_player = get_data_player(player_info, file_statistic)
    print(data_player)
    # –∏–≥—Ä–∞–µ–º, –µ—â–µ –Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, –µ—Å—Ç—å –∫–æ–Ω—Ñ–µ—Ç—ã –Ω–∞ —Å—Ç–æ–ª–µ
    if int(data_player[2]) > 0:
        if max_take_candies1 > int(data_player[2]):
            max_take_candies1 = int(data_player[2])
        # —Ö–æ–¥ –¥–µ–ª–∞–µ—Ç –∏–≥—Ä–æ–∫
        take_candies = update.message.text
        if take_candies.isdigit():
            take_candies = int(take_candies)
            if 0 < take_candies < max_take_candies1 + 1:
                data_player[2] = int(data_player[2]) - take_candies
                data_player[5] = 0
                data_player[6] = int(data_player[6]) + take_candies
                context.bot.send_message(update.effective_chat.id, f'üòé –¢—ã –∑–∞–±—Ä–∞–ª(–∞) {take_candies} –∫–æ–Ω—Ñ–µ—Ç.\n–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {data_player[2]} –∫–æ–Ω—Ñ–µ—Ç(—ã).')
                update_data(check_stat_player, player_info, data_player, file_path)
                if data_player[2] == 0:
                    win = f'üòé {update.effective_user.first_name}'
                    context.bot.send_message(update.effective_chat.id, f'{win} - –ø–æ–±–µ–¥–∏—Ç–µ–ª—å! –°—É–ø–µ—Ä!!! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!\n–í—Å–µ {count_candies} –∫–æ–Ω—Ñ–µ—Ç —Ç–≤–æ–∏!\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!\n\n–ò–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑ - /start')
                    data_player[2] = count_candies
                    data_player[4] = 0
                    data_player[6] = 0
                    data_player[7] = 0
                    data_player[8] = int(data_player[8]) + 1
                    data_player[9] = int(data_player[9]) + 1
                    data_player[10] = int(data_player[10]) + 1
                    update_data(check_stat_player, player_info, data_player, file_path)
                    state = ConversationHandler.END
            else:
                context.bot.send_message(update.effective_chat.id, f'‚ùå –û—à–∏–±–∫–∞! –¢—ã –º–æ–∂–µ—à—å –≤–∑—è—Ç—å –æ—Ç 1 –¥–æ {max_take_candies1} –∫–æ–Ω—Ñ–µ—Ç.')
                error = 1
        else:
            context.bot.send_message(update.effective_chat.id, '‚ùå –û—à–∏–±–∫–∞! –í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.')
            error = 1
        
        # –•–æ–¥ –¥–µ–ª–∞–µ—Ç –±–æ—Ç
        file_statistic = get_data('hw9_statistic.csv')
        data_player = get_data_player(player_info, file_statistic)
        if int(data_player[4]) == 1 and error == 0:
            take_candies = bot_plays(data_player[3], data_player)
            data_player[2] = int(data_player[2]) - take_candies
            if max_take_candies1 > int(data_player[2]):
                max_take_candies1 = int(data_player[2])
            context.bot.send_message(update.effective_chat.id, f'''ü§ñ –Ø –∑–∞–±—Ä–∞–ª {take_candies} –∫–æ–Ω—Ñ–µ—Ç.
–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {data_player[2]} –∫–æ–Ω—Ñ–µ—Ç(—ã).
–¢–≤–æ–π —Ö–æ–¥! –¢—ã –º–æ–∂–µ—à—å –≤–∑—è—Ç—å –Ω–µ –±–æ–ª–µ–µ —á–µ–º {max_take_candies1} –∫–æ–Ω—Ñ–µ—Ç(—ã). –û—Ç–ø—Ä–∞–≤—å –≤ —á–∞—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç.''')
            if data_player[2] == 0:
                win = 'ü§ñ BOT'
                context.bot.send_message(update.effective_chat.id, f'{win} - –ø–æ–±–µ–¥–∏—Ç–µ–ª—å!\n–í—Å–µ {count_candies} –∫–æ–Ω—Ñ–µ—Ç –º–æ–∏!\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!\n\n–ò–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑ - /start')
                data_player[2] = count_candies
                data_player[6] = 0
                data_player[7] = 0
                take_candies = 0
                data_player[8] = int(data_player[8]) + 1
                update_data(check_stat_player, player_info, data_player, file_path)
                state = ConversationHandler.END
            data_player[5] = 1
            data_player[7] = int(data_player[7]) + take_candies
            update_data(check_stat_player, player_info, data_player, file_path)
        else:
            data_player[4] = 1
            update_data(check_stat_player, player_info, data_player, file_path)
    return state

def cancel(update, context):
    context.bot.send_message(update.effective_chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.')

start_handler = CommandHandler('start', start)
rules_handler = CommandHandler('rules', rules)
level_handler = MessageHandler(Filters.text, level)
game_handler = MessageHandler(Filters.text, game)

cancel_handler = CommandHandler('cancel', cancel)

conv_handler = ConversationHandler(entry_points=[level_handler],
                                        states={A: [game_handler],
                                                B: [level_handler]},
                                        fallbacks=[cancel_handler])

dispatcher.add_handler(start_handler)
dispatcher.add_handler(rules_handler)
dispatcher.add_handler(conv_handler)

updater.start_polling() # start
updater.idle() # end
